name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    name: Build binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build:
          - { target: x86_64-unknown-linux-gnu, os: ubuntu-latest }
          - { target: x86_64-pc-windows-gnu, os: ubuntu-latest }
          - { target: x86_64-apple-darwin, os: macos-latest }
    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 安装 Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.build.target }}
          override: true

      - name: 安装依赖（仅Linux交叉编译到Windows）
        if: matrix.build.target == 'x86_64-pc-windows-gnu'
        run: sudo apt-get update && sudo apt-get install -y mingw-w64

      - name: 编译 release
        run: cargo build --release --target ${{ matrix.build.target }}

      - name: 打包产物
        run: |
          mkdir -p dist
          cp target/${{ matrix.build.target }}/release/berry-api dist/
          cd dist
          tar czvf ${{ matrix.build.target }}.tar.gz berry-api
        # 注意: 可执行文件名需替换为你的实际名称

      - name: 上传产物
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.build.target }}-binary
          path: dist/${{ matrix.build.target }}.tar.gz

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: 下载所有产物
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: 发布 Release 并上传产物
        uses: softprops/action-gh-release@v2
        with:
          files: dist/**/*.tar.gz
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
